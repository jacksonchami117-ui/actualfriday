name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
        if: hashFiles('package.json') != ''

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
        if: hashFiles('requirements.txt', 'pyproject.toml', 'setup.py') != ''

      - name: Install Node.js dependencies
        run: npm ci
        if: hashFiles('package.json') != ''

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        if: hashFiles('requirements.txt', 'pyproject.toml', 'setup.py') != ''

      - name: Lint (Node.js)
        run: npm run lint || echo "No lint script configured"
        if: hashFiles('package.json') != ''

      - name: Lint (Python)
        run: |
          pip install flake8 black
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || echo "Linting completed"
          black --check . || echo "Formatting check completed"
        if: hashFiles('requirements.txt', 'pyproject.toml', 'setup.py') != ''

      - name: Build (Node.js)
        run: npm run build || echo "No build script configured"
        if: hashFiles('package.json') != ''

      - name: Test (Node.js)
        run: npm test || echo "No test script configured"
        if: hashFiles('package.json') != ''

      - name: Test (Python)
        run: |
          pip install pytest
          pytest || echo "No tests found"
        if: hashFiles('requirements.txt', 'pyproject.toml', 'setup.py') != ''